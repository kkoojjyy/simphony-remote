"""Rename Application table to Image

Revision ID: 10d7c55a9104
Revises:
Create Date: 2017-05-10 18:51:00.876105

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import sessionmaker
from remoteappmanager.db import orm

# revision identifiers, used by Alembic.
revision = '10d7c55a9104'
down_revision = None
branch_labels = None
depends_on = None

Application = sa.Table(
    'application',
    sa.MetaData(),
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('image', sa.Unicode()),
)


TmpAccounting = sa.Table(
    'tmpaccounting',
    sa.MetaData(),
    sa.Column('id', sa.String(32), primary_key=True),
    sa.Column('user_id', sa.Integer),
    sa.Column('image_id', sa.Integer),
    sa.Column('application_policy_id', sa.Integer)
    )


OldAccounting = sa.Table(
    'accounting',
    sa.MetaData(),
    sa.Column('id', sa.String(32), primary_key=True),
    sa.Column('user_id', sa.Integer),
    sa.Column('application_id', sa.Integer),
    sa.Column('application_policy_id', sa.Integer)
    )


def upgrade():
    # Joy. sqlite does not support column renaming, so we need to
    # create and copy.
    connection = op.get_bind()
    orm.Image.__table__.create(connection)

    Session = sessionmaker()
    Session.configure(bind=connection)
    session = Session()

    for row in connection.execute(Application.select()):
        d = {"id": row[0], "name": row[1]}
        session.add(orm.Image(**d))

    session.commit()

    # it also appears that table renaming means destroying the old table
    # and creating a new one in sqlite.

    TmpAccounting.create(connection)

    for row in connection.execute(OldAccounting.select()):
       connection.execute(TmpAccounting.insert(), id=row[0], user_id=row[1], image_id=row[2], application_policy_id=row[3])

    op.drop_table("accounting")

    orm.Accounting.__table__.create(connection)

    for row in connection.execute(TmpAccounting.select()):
        d = {
            "id": row[0],
            "user_id": row[1],
            "image_id": row[2],
            "application_policy_id": row[3]
            }
        session.add(orm.Accounting(**d))

    session.commit()
    op.drop_table('application')

def downgrade():
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    #op.add_column('accounting', sa.Column('application_id', sa.INTEGER(), nullable=True))
    #op.drop_constraint(None, 'accounting', type_='foreignkey')
    #op.create_foreign_key(None, 'accounting', 'application', ['application_id'], ['id'], ondelete='CASCADE')
    #op.drop_constraint(None, 'accounting', type_='unique')
    #op.drop_column('accounting', 'image_id')
    #op.create_table('application',
    #sa.Column('id', sa.INTEGER(), nullable=False),
    #sa.Column('image', sa.VARCHAR(), nullable=True),
    #sa.PrimaryKeyConstraint('id'),
    #sa.UniqueConstraint('image')
    #)
    #op.drop_table('image')
    # ### end Alembic commands ###
